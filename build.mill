//| mill-version: 1.0.4
//| mvnDeps: ["com.lihaoyi::mill-contrib-buildinfo:$MILL_VERSION"]

import mill.*, scalalib.*
import os.*
import mill.contrib.buildinfo.BuildInfo
import mill.scalajslib.*
import mill.scalajslib.api.*

object Versions {
    val scala2 = "2.12.20"
    val sjs = "1.19.0"
    val sourcecode = "0.3.1"
    val fansi = "0.4.0"
    val scalaParserCombinators = "1.1.2"
    val circe = "0.13.0-shaded-2"
    val osLib = "0.9.3"
    val utest = "0.9.1"
}

trait BaseModule extends ScalaModule {
  def scalaVersion = Versions.scala2
  def mvnDeps = Seq(
    // Core Libraries
    mvn"com.lihaoyi::os-lib:${Versions.osLib}",
    mvn"com.lihaoyi::sourcecode:${Versions.sourcecode}",
    mvn"com.lihaoyi::fansi:${Versions.fansi}",
    
    // Parsing & Language
    mvn"org.scala-lang.modules::scala-parser-combinators:${Versions.scalaParserCombinators}",
    
    // JSON Processing (Circe)
    mvn"org.scalablytyped.circe013::circe-generic:${Versions.circe}",
    mvn"org.scalablytyped.circe013::circe-jackson29:${Versions.circe}",
    
    // Build & Development Tools
  )

  object test extends ScalaTests {
    def mvnDeps = Seq(mvn"com.lihaoyi::utest:${Versions.utest}")
    def testFramework = "utest.runner.Framework"
  }
}

object core extends BaseModule
object logging extends BaseModule
object ts extends BaseModule {
  def moduleDeps = Seq(core, logging)
}

object scalajs extends BaseModule {
  def moduleDeps = Seq(core, logging)
}

object phases extends BaseModule {
  def moduleDeps = Seq(core, logging)
}

object `importer-portable` extends BaseModule with BuildInfo {
  def moduleDeps = Seq(phases, ts, scalajs)

  val buildInfoPackageName = "org.scalablytyped.converter.internal"

  def buildInfoMembers = Seq(
    BuildInfo.Value("gitSha", os.proc("git", "rev-parse", "HEAD").call().out.trim()),
    BuildInfo.Value("version", "0.1.0"),
  )
}

object importer extends BaseModule {
  def moduleDeps = Seq(`importer-portable`)
}

object runtime extends ScalaJSModule {
  def scalaVersion = Versions.scala2
  def scalaJSVersion = Versions.sjs
}

object cli extends BaseModule {
  def moduleDeps = Seq(importer)
}